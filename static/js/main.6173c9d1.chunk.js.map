{"version":3,"sources":["redux/types.js","redux/actions/add-ip-action.js","redux/actions/get-ip-data-action.js","components/FormIp/FormIp.js","components/Content/Content.js","components/ipContent/ipContent.js","App.js","store.js","redux/reducers/add-ip-reducer.js","redux/reducers/get-ip-data-reducer.js","reportWebVitals.js","index.js"],"names":["ADD_IP","GET_IP_DATA","addIp","ip","type","payload","getIpDataAction","data","FormIp","fetchData","fetch","props","then","response","json","console","log","error","message","this","className","placeholder","name","onChange","e","currentTarget","value","onClick","Component","connect","state","addIpReducer","getIpDataReducer","dispatch","Content","ipData","map","item","version","city","region","region_code","country_code","country_name","country_capital","country_tld","continent_code","String","in_eu","postal","latitude","longitude","timezone","utc_offset","country_calling_code","currency","currency_name","languages","country_area","country_population","asn","org","IpContent","App","reducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6173c9d1.chunk.js","sourcesContent":["export const ADD_IP = 'ADD_IP';\r\nexport const GET_IP_DATA = 'GET_IP_DATA';\r\n","import { ADD_IP } from \"../types\";\r\n\r\nconst addIp = (ip) => {\r\n    return {\r\n        type: ADD_IP,\r\n        payload: ip\r\n\r\n    }\r\n}\r\n\r\nexport default addIp;\r\n","import { GET_IP_DATA } from \"../types\";\r\n\r\nconst getIpDataAction = (data) => {\r\n    return {\r\n        type: GET_IP_DATA,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport default getIpDataAction;\r\n","import React, {Component} from 'react';\r\nimport './formIp.scss'\r\nimport addIp from \"../../redux/actions/add-ip-action\";\r\nimport {connect} from \"react-redux\";\r\nimport getIpDataAction from \"../../redux/actions/get-ip-data-action\";\r\nimport \"@fontsource/roboto\";\r\nclass FormIp extends Component {\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    fetchData = () => {\r\n        // eslint-disable-next-line\r\n        fetch(`https://ipapi.co/` + `${this.props.ip}` + `/json/`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                console.log(json)\r\n                    this.props.getIpDataAction(json)\r\n                },\r\n                (error) => {\r\n                    console.log(error.message)\r\n                })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"container__form-title\">\r\n                    <div className=\"container__image\">\r\n\r\n                    </div>\r\n                    <p className=\"container__title\">Find My IP</p>\r\n                </div>\r\n                <form className=\"form-items\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"container__form-input\"\r\n                        placeholder=\"IP\"\r\n                        name=\"comment\"\r\n                        onChange={(e) => this.props.addIp(e.currentTarget.value)}/>\r\n                    <button type=\"button\" className=\"container__form-btn\" onClick={this.fetchData}>Search\r\n                    </button>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ip: state.addIpReducer,\r\n        data: state.getIpDataReducer\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addIp: e => dispatch(addIp(e)),\r\n        getIpDataAction: data=>dispatch(getIpDataAction(data))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormIp);\r\n","import React, { Component } from 'react';\r\nimport './content.scss';\r\nimport {connect} from \"react-redux\";\r\nimport \"@fontsource/roboto\"\r\n\r\nclass Content extends Component{\r\n    render() {\r\n        return(\r\n            <div className=\"content-container\">\r\n                {this.props.ipData.map((item)=>(\r\n                    <ul key={item.ip} className=\"content-container__list\">\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>ip: <span className=\"content-container__string\">{item.ip}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>version:<span className=\"content-container__string\">{item.version}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>city: <span className=\"content-container__string\">{item.city}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>region: <span className=\"content-container__string\">{item.region}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>region_code: <span className=\"content-container__string\">{item.region_code}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>country_code: <span className=\"content-container__string\">{item.country_code}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>country_name: <span className=\"content-container__string\">{item.country_name}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>country_capital: <span className=\"content-container__string\">{item.country_capital}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>country_tld: <span className=\"content-container__string\">{item.country_tld}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>continent_code: <span className=\"content-container__string\">{item.continent_code}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-boolean\">tf</button>\r\n                            <p>in_eu: <span className=\"content-container__boolean\">{String(item.in_eu)}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>postal: <span className=\"content-container__string\">{item.postal}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-number\">#</button>\r\n                            <p>latitude: <span className=\"content-container__number\">{item.latitude}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-number\">#</button>\r\n                            <p>longitude: <span className=\"content-container__number\">{item.longitude}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>timezone: <span className=\"content-container__string\">{item.timezone}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>utc_offset: <span className=\"content-container__string\">{item.utc_offset}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>country_calling_code: <span className=\"content-container__string\">{item.country_calling_code}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>currency: <span className=\"content-container__string\">{item.currency}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>currency_name: <span className=\"content-container__string\">{item.currency_name}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>languages: <span className=\"content-container__string\">{item.languages}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-number\">#</button>\r\n                            <p>country_area: <span className=\"content-container__number\">{item.country_area}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-number\">#</button>\r\n                            <p>country_population: <span className=\"content-container__number\">{item.country_population}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>asn: <span className=\"content-container__string\">{item.asn}</span></p>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"content-container__btn-string\">“</button>\r\n                            <p>org: <span className=\"content-container__string\">{item.org}</span></p>\r\n                        </li>\r\n                    </ul>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ipData: state.getIpDataReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Content);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport FormIp from \"../FormIp/FormIp\";\r\nimport Content from \"../Content/Content\";\r\nimport \"@fontsource/roboto\";\r\nclass IpContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FormIp/>\r\n                <Content/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ip: state.addIpReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(IpContent);\r\n","import './App.scss';\nimport IpContent from \"./components/ipContent/ipContent\";\n\nfunction App() {\n    return (\n        <div className=\"app-container\">\n            <div className=\"app-container__body\">\n                <IpContent/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import thunk from 'redux-thunk';\r\nimport {createStore, applyMiddleware, combineReducers} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {addIpReducer} from \"./redux/reducers/add-ip-reducer\";\r\nimport {getIpDataReducer} from \"./redux/reducers/get-ip-data-reducer\";\r\n\r\nconst reducer = combineReducers({\r\n    addIpReducer,\r\n    getIpDataReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store;\r\n","import { ADD_IP } from \"../types\";\r\n\r\nexport const addIpReducer = (state = '', action) => {\r\n    // eslint-disable-next-line\r\n    switch (action.type) {\r\n        case ADD_IP:\r\n            return action.payload\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\n","import { GET_IP_DATA} from \"../types\";\r\n\r\nexport const getIpDataReducer = (state=[{}], action) => {\r\n    // eslint-disable-next-line\r\n    switch (action.type) {\r\n        case GET_IP_DATA:\r\n            return [action.payload]\r\n    }\r\n    return state\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}